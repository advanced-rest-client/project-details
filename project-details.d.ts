/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   project-details.html
 */

/// <reference path="../polymer/types/polymer-element.d.ts" />
/// <reference path="../project-requests-list/project-requests-list.d.ts" />
/// <reference path="../legacyproject-related-requests/legacyproject-related-requests.d.ts" />
/// <reference path="../paper-toast/paper-toast.d.ts" />
/// <reference path="../paper-button/paper-button.d.ts" />
/// <reference path="../paper-icon-button/paper-icon-button.d.ts" />
/// <reference path="../paper-menu-button/paper-menu-button.d.ts" />
/// <reference path="../paper-listbox/paper-listbox.d.ts" />
/// <reference path="../paper-item/paper-icon-item.d.ts" />
/// <reference path="../paper-dialog/paper-dialog.d.ts" />
/// <reference path="../arc-icons/arc-icons.d.ts" />
/// <reference path="../bottom-sheet/bottom-sheet.d.ts" />
/// <reference path="../saved-request-detail/saved-request-detail.d.ts" />
/// <reference path="../saved-request-editor/saved-request-editor.d.ts" />
/// <reference path="../paper-fab/paper-fab.d.ts" />
/// <reference path="../marked-element/marked-element.d.ts" />
/// <reference path="../markdown-styles/markdown-styles.d.ts" />
/// <reference path="../paper-styles/shadow.d.ts" />
/// <reference path="project-details-editor.d.ts" />

declare namespace UiElements {

  /**
   * A project details panel for the Advanced REST Client.
   *
   * Contains complete UI to display ARC's legacy projects.
   *
   * This element contains logic for handling request and project data
   * (`arc-models`).
   *
   * It doesn't support data export. It must be used with another element
   * that handles `export-project` custom event.
   *
   * The element dispatches `navigate` custom event when the navigation occures.
   * Hosting application shouls handle the event and navigate the used into
   * requested place.
   *
   * ### Example
   *
   * ```
   * <project-details project-id="some-id"></project-details>
   * ```
   *
   * ### Styling
   *
   * `<project-details>` provides the following custom properties and mixins
   * for styling:
   *
   * Custom property | Description | Default
   * ----------------|-------------|----------
   * `--project-details` | Mixin applied to the element | `{}`
   * `--project-details-description-color` | Color of the project description
   * text | `rgba(0, 0, 0, 0.74)`
   * `--project-details-description-max-width` | Max width of the project description | `700px`
   * `--warning-primary-color` | Main color of the warning messages | `#FF7043`
   * `--warning-contrast-color` | Contrast color for the warning color | `#fff`
   * `--error-toast` | Mixin applied to the error toast | `{}`
   * `--project-details-fab-background-color` | Color of the fab button in the
   * details panel | `--primary-color`
   * `--empty-info` | Theme mixin, applied to the "empty info" message | `{}`
   * `--project-details-description-empty` | Mixin applied to the "empty info" message | `{}`
   * `--project-details-description` | Description of the project | `{}`
   * `--project-details-description-container` Container of the description of the project | `{}`
   * `project-details-header` | Mixin applied to the header section | `{}`
   * `project-details-editor` | Mixin applied to the project editor | `{}`
   */
  class ProjectDetails extends Polymer.Element {

    /**
     * Project datastore ID to display.
     */
    projectId: string|null|undefined;

    /**
     * List of requests to display.
     * This list is computed when the `projectId` changes
     */
    requests: any[]|null|undefined;

    /**
     * Project data restored from the datastore.
     */
    project: object|null|undefined;

    /**
     * Set to true to enable project editor.
     */
    edit: boolean|null|undefined;

    /**
     * True when the project data are being loaded
     */
    readonly loadingProject: boolean|null|undefined;

    /**
     * True when the request data are being loaded
     */
    readonly loadingRequests: boolean|null|undefined;

    /**
     * Computed value, true when the project has requests.
     */
    readonly hasRequests: boolean|null|undefined;

    /**
     * List of requests that has been recently removed
     */
    _latestDeleted: any[]|null|undefined;
    connectedCallback(): void;
    disconnectedCallback(): void;
    _projectChanged(projectId: any): void;
    _cancelRequestLoading(loadingRequests: any, hasRequests: any): void;

    /**
     * Handles the `list-item-open` event to open a request.
     */
    _onOpen(e: any): void;

    /**
     * Handles items delete event.
     */
    _onDelete(e: any): any;

    /**
     * Deletes a request from the details panel.
     */
    _deleteRequestDetails(): any;

    /**
     * Performs a delete action of request items.
     *
     * @param deleted List of deleted items.
     * @returns [description]
     */
    _delete(deleted: Array<object|null>|null): any;

    /**
     * Restores removed requests.
     * It does nothing if `_latestDeleted` is not set or empty.
     */
    revertDeleted(): any;

    /**
     * Handles the export event. Fires `export-project` custom event
     */
    _onExport(e: any): void;

    /**
     * Menu item handler to export all project data
     */
    _onExportAll(): void;
    _onExportAllDrive(): void;

    /**
     * Dispatches the `export-project` event with relevant data.
     *
     * @param requests List of request to export with the project.
     */
    _exportItems(requests: any[]|null, destination: any): void;

    /**
     * Handler for the list reorder event. Updates items order in the datastore.
     */
    _onReorder(): void;

    /**
     * Updates requests in bulk opeartion.
     */
    _updateBulk(items: any): any;

    /**
     * Sends the `request-object-changed` custom event for each request on the list.
     *
     * @param item Request object.
     * @returns Promise resolved when the request object is updated.
     */
    _updateRequest(item: object|null): Promise<any>|null;

    /**
     * Computes value for the `hasRequests` property.
     */
    _computeHasRequests(length: any): any;

    /**
     * Toogles project details editor
     */
    toggleEdit(): void;

    /**
     * Handler to project edit cancel event
     */
    _cancelEdit(): void;

    /**
     * Handler to project edit save event
     */
    _saveEdit(e: any): void;

    /**
     * handler for the `project-object-changed`. Updates project data if needed.
     */
    _projectDataChanged(e: any): void;

    /**
     * Handler for the `project-object-deleted` event.
     */
    _projectDeleteHandler(e: any): void;

    /**
     * Deletes the project when there's no requests associated with it.
     * This function doesn't ask for confirmation.
     */
    _deleteEmpty(): any;

    /**
     * Called with "delete" menu option.
     */
    _deleteProject(): void;

    /**
     * Called when the "delete dialog" closes
     */
    _deleteDialogResult(e: any): any;
    _notifyDeleteProject(): any;

    /**
     * Opens the request details applet with the request.
     */
    _onDetails(e: any): void;

    /**
     * Fires `navigate` event for currently loaded in the details request.
     */
    _loadRequestDetails(): void;

    /**
     * Opens request details editor in place of the request details applet.
     */
    _editRequestDetails(): void;
    _resizeSheetContent(): void;
    _resizeEditorSheetContent(): void;
    _cancelRequestEdit(): void;

    /**
     * Prepares a detail object for the `save-request-data` event.
     *
     * @param opts Map of saving request options returned from save
     *                      panel / dialog
     * @param request The request object to update.
     * @returns Event's detail object.
     */
    _prepareSaveRequestEvent(opts: object|null, request: object|null): object|null;

    /**
     * Dispatches the event to save request data in the data store.
     *
     * @param e The `save-request` event dispatched from the editor.
     */
    _saveRequestEdit(e: CustomEvent|null): any;
  }
}

interface HTMLElementTagNameMap {
  "project-details": UiElements.ProjectDetails;
}
