{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "An element to render project details editor.",
      "summary": "",
      "path": "project-details-editor.js",
      "properties": [
        {
          "name": "name",
          "type": "string | null | undefined",
          "description": "Name of the project.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 6
            },
            "end": {
              "line": 74,
              "column": 18
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "description",
          "type": "string | null | undefined",
          "description": "The description of the project",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 6
            },
            "end": {
              "line": 78,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "cancel",
          "description": "Sends the `cancel-edit` custom event to the parent element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 2
            },
            "end": {
              "line": 86,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "save",
          "description": "Sends the `save-edit` custom event to the parent element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 2
            },
            "end": {
              "line": 102,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 27,
          "column": 0
        },
        "end": {
          "line": 122,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "PolymerElement",
      "name": "UiElements.ProjectDetailsEditor",
      "attributes": [
        {
          "name": "name",
          "description": "Name of the project.",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 6
            },
            "end": {
              "line": 74,
              "column": 18
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "description",
          "description": "The description of the project",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 6
            },
            "end": {
              "line": 78,
              "column": 25
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "cancel-edit",
          "description": "Fired when the user cancelled the action-button.\n\nThis event does not bubbles.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "save-edit",
          "description": "Fired when the user requested to save the data.\nThis element does not recognize if any change actually has been made\nto the data so parent element may want to check if any data actually\nchanged.\n\nThis event does not bubbles.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "project-details-editor"
    },
    {
      "description": "A project details panel for the Advanced REST Client.\n\nContains complete UI to display ARC's legacy projects.\n\nThis element contains logic for handling request and project data\n(`arc-models`).\n\nIt doesn't support data export. It must be used with another element\nthat handles `export-data` custom event.\n\nThe element dispatches `navigate` custom event when the navigation occures.\nHosting application shouls handle the event and navigate the used into\nrequested place.\n\n### Example\n\n```html\n<project-details project-id=\"some-id\"></project-details>\n```\n\n### Styling\n\n`<project-details>` provides the following custom properties and mixins\nfor styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--project-details` | Mixin applied to the element | `{}`\n`--project-details-description-button-color` | Color od the add description button | `--primary-color`\n`--project-details-description-color` | Color of the project description text | `rgba(0, 0, 0, 0.74)`\n`--project-details-description-max-width` | Max width of the project description | `700px`\n`--project-details-fab-background-color` | Color of the fab button in the details panel | `--primary-color`\n`--empty-info` | Theme mixin, applied to the \"empty info\" message | `{}`\n`--project-details-description-empty` | Mixin applied to the \"empty info\" message | `{}`\n`--project-details-description` | Description of the project | `{}`\n`--project-details-description-container` Container of the description of the project | `{}`\n`--project-details-header` | Mixin applied to the header section | `{}`\n`--project-details-editor` | Mixin applied to the project editor | `{}`\n`--project-details-bottom-sheet` | Mixin apllied to the `<bottom-sheet>` elements | `{}`\n`--context-menu-item-color` | Color of the dropdown menu items | ``\n`--context-menu-item-background-color` | Background olor of the dropdown menu items | ``\n`--context-menu-item-color-hover` | Color of the dropdown menu items when hovering | ``\n`--context-menu-item-background-color-hover` | Background olor of the dropdown menu items when hovering | ``\n`--bottom-sheet-width` | Width of the `<bottom-sheet>` element | `100%`\n`--bottom-sheet-max-width` | Max width of the `<bottom-sheet>` element | `700px`\n`--project-details-bottom-sheet-right` | Right position of the `<bottom-sheet>` element | `40px`\n`--project-details-bottom-sheet-left` | Left position of the `<bottom-sheet>` element | `auto`\n`--warning-dialog-button-color` | Button color of the warning dialog | `#fff`\n`--warning-dialog-button-background-color` | Button background color of the warning dialog | `transparent`\n`--warning-primary-color` | Main color of the warning messages | `#FF7043`\n`--warning-contrast-color` | Contrast color for the warning color | `#fff`\n`--error-toast` | Mixin applied to the error toast | `{}`",
      "summary": "",
      "path": "project-details.js",
      "properties": [
        {
          "name": "requests",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 365,
              "column": 2
            },
            "end": {
              "line": 367,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "projectId",
          "type": "string | null | undefined",
          "description": "Project datastore ID to display.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 297,
              "column": 6
            },
            "end": {
              "line": 300,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_projectIdChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "project",
          "type": "Object | null | undefined",
          "description": "Retreived from the data store project data.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 304,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "edit",
          "type": "boolean | null | undefined",
          "description": "Set to true to enable project editor.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 308,
              "column": 6
            },
            "end": {
              "line": 311,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_hasRequests",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 312,
              "column": 6
            },
            "end": {
              "line": 312,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "loadingProject",
          "type": "boolean | null | undefined",
          "description": "True when the project data are being loaded",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 316,
              "column": 6
            },
            "end": {
              "line": 320,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_latestDeleted",
          "type": "Array | null | undefined",
          "description": "List of requests that has been recently removed",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 322,
              "column": 6
            },
            "end": {
              "line": 322,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "editorOpened",
          "type": "boolean | null | undefined",
          "description": "When set the project metadata editor is opened.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 326,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "detailsOpened",
          "type": "boolean | null | undefined",
          "description": "When set the project metadata preview is opened.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 330,
              "column": 6
            },
            "end": {
              "line": 330,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "noAutoProjects",
          "type": "boolean | null | undefined",
          "description": "When set the element won't request projects list when attached to the dom.\nThis is passed to the request editor.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 335,
              "column": 6
            },
            "end": {
              "line": 335,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "draggableEnabled",
          "type": "boolean | null | undefined",
          "description": "Enables the comonent to accept drop action with a request.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 339,
              "column": 6
            },
            "end": {
              "line": 339,
              "column": 70
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_draggableChanged\"",
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_exportOptionsOpened",
          "type": "boolean | null | undefined",
          "description": "Indicates that the export options panel is currently rendered.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 343,
              "column": 6
            },
            "end": {
              "line": 343,
              "column": 35
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_exportOptions",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 344,
              "column": 6
            },
            "end": {
              "line": 355,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 377,
              "column": 2
            },
            "end": {
              "line": 387,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 389,
              "column": 2
            },
            "end": {
              "line": 394,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_draggableChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 396,
              "column": 2
            },
            "end": {
              "line": 402,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_addDndEvents",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 404,
              "column": 2
            },
            "end": {
              "line": 411,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_removeDndEvents",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 413,
              "column": 2
            },
            "end": {
              "line": 420,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_navigate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 422,
              "column": 2
            },
            "end": {
              "line": 424,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "detail"
            }
          ]
        },
        {
          "name": "_dispatchProjectRead",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 426,
              "column": 2
            },
            "end": {
              "line": 430,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "_dispatchRequestRead",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 432,
              "column": 2
            },
            "end": {
              "line": 436,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "_projectIdChanged",
          "description": "Updates project info when `projectId` changed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 442,
              "column": 2
            },
            "end": {
              "line": 464,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "projectId",
              "type": "String",
              "description": "Project data store id."
            }
          ],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_errorToast",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 466,
              "column": 2
            },
            "end": {
              "line": 469,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "message"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onOpen",
          "description": "Handles the `list-item-open` event to open a request.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 471,
              "column": 2
            },
            "end": {
              "line": 478,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onDelete",
          "description": "Handles items delete event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 480,
              "column": 2
            },
            "end": {
              "line": 483,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_deleteRequestDetails",
          "description": "Deletes a request from the details panel.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 486,
              "column": 2
            },
            "end": {
              "line": 490,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_delete",
          "description": "Performs a delete action of request items.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 498,
              "column": 2
            },
            "end": {
              "line": 536,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "deleted",
              "type": "Array.<Object>",
              "description": "List of deleted items."
            },
            {
              "name": "opts",
              "type": "?Object",
              "description": "If `skipRevert` is true it ignores \"revert\" logic"
            }
          ],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_updateDeletedRevs",
          "description": "Updates `_rev` property after the item was deleted.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 543,
              "column": 2
            },
            "end": {
              "line": 559,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "deleted",
              "type": "Array.<Object>",
              "description": "List of deleted requests to be updated."
            },
            {
              "name": "updateResult",
              "type": "Object",
              "description": "Request model response to delete request."
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of requests with updated `_rev`"
          }
        },
        {
          "name": "revertDeleted",
          "description": "Restores removed requests.\nIt does nothing if `_latestDeleted` is not set or empty.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 566,
              "column": 2
            },
            "end": {
              "line": 582,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_dispatchUndelete",
          "description": "Dispatches `request-objects-undeleted` event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 589,
              "column": 2
            },
            "end": {
              "line": 601,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "Array.<Object>",
              "description": "List of deleted requests. The list\ncontains objects with `_id` and `_rev` properties."
            }
          ],
          "return": {
            "type": "CustomEvent"
          }
        },
        {
          "name": "_closeMainMenu",
          "description": "Forces main menu to close.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 605,
              "column": 2
            },
            "end": {
              "line": 608,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "openExportAll",
          "description": "Toggles export options panel and sets export items to all currently loaded requests.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 612,
              "column": 2
            },
            "end": {
              "line": 616,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_cancelExportOptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 618,
              "column": 2
            },
            "end": {
              "line": 621,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onExport",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 623,
              "column": 2
            },
            "end": {
              "line": 626,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_exportAllFile",
          "description": "Creates export file for all items.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 631,
              "column": 2
            },
            "end": {
              "line": 640,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise",
            "desc": "Result of calling `_doExportItems()`"
          }
        },
        {
          "name": "_acceptExportOptions",
          "description": "Handler for `accept` event dispatched by export options element.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 646,
              "column": 2
            },
            "end": {
              "line": 650,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "Result of calling `_doExportItems()`"
          }
        },
        {
          "name": "_doExportItems",
          "description": "Calls `_dispatchExportData()` from requests lists mixin with\nprepared arguments",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 659,
              "column": 2
            },
            "end": {
              "line": 676,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "requests",
              "type": "Array.<Object>",
              "description": "List of request to export with the project."
            },
            {
              "name": "detail",
              "type": "String",
              "description": "Export configuration"
            }
          ],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_projectForRequests",
          "description": "Updates project object to include only selected requests.\nThe requests list can be all of them. In this case it uses the same list.\nIf requests size is different than the projects requests then it iterates\nover the array and removes IDs that are not available on the `requests`\nlist.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 687,
              "column": 2
            },
            "end": {
              "line": 715,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "requests",
              "type": "Array.<Object>",
              "description": "List of requests being exported."
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Project definition to export.\nThis is a copy of current project."
          }
        },
        {
          "name": "_dispatchExportData",
          "description": "Dispatches `export-data` event and returns it.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 723,
              "column": 2
            },
            "end": {
              "line": 733,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "requests",
              "type": "Array.<Object>",
              "description": "List of request to export."
            },
            {
              "name": "project",
              "type": "Object",
              "description": "Project object to export"
            },
            {
              "name": "opts",
              "type": "Object"
            }
          ],
          "return": {
            "type": "CustomEvent"
          }
        },
        {
          "name": "_generateFileName",
          "description": "Generates export file name based on current project name.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 738,
              "column": 2
            },
            "end": {
              "line": 751,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "String",
            "desc": "File name for export."
          }
        },
        {
          "name": "_updateBulk",
          "description": "Updates requests in bulk opeartion.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 757,
              "column": 2
            },
            "end": {
              "line": 760,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "Array.<Object>",
              "description": "Requests list."
            }
          ],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_updateRequest",
          "description": "Sends the `request-object-changed` custom event for each request on the list.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 766,
              "column": 2
            },
            "end": {
              "line": 781,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "Request object."
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "Promise resolved when the request object is updated."
          }
        },
        {
          "name": "toggleEdit",
          "description": "Toogles project details editor",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 784,
              "column": 2
            },
            "end": {
              "line": 787,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_cancelEdit",
          "description": "Handler to project edit cancel event",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 789,
              "column": 2
            },
            "end": {
              "line": 791,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_saveEdit",
          "description": "Handler to project edit save event",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 793,
              "column": 2
            },
            "end": {
              "line": 812,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_dispatchProjectUpdate",
          "description": "Dispatches `project-object-changed` event to inform model to update\nthe data.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 820,
              "column": 2
            },
            "end": {
              "line": 829,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "project",
              "type": "Object",
              "description": "Data to store."
            }
          ],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_projectDeleteHandler",
          "description": "Handler for the `project-object-deleted` event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 834,
              "column": 2
            },
            "end": {
              "line": 842,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_deleteEmpty",
          "description": "Deletes the project when there's no requests associated with it.\nThis function doesn't ask for confirmation.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 849,
              "column": 2
            },
            "end": {
              "line": 856,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_deleteProject",
          "description": "Opens the warning dialog to delete the project.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 860,
              "column": 2
            },
            "end": {
              "line": 863,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_deleteDialogResult",
          "description": "Called when the delete warning dialog closes.\n\nThe function removes requests that exclusively belongs to this project\nand updates the requests that contains this project and some other.\nFinally it removes the project.\nEach of the actions is separate action based on events API.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 875,
              "column": 2
            },
            "end": {
              "line": 906,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_notifyDeleteProject",
          "description": "Dispatches `project-object-deleted` event to remove the project.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 911,
              "column": 2
            },
            "end": {
              "line": 926,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_onDetails",
          "description": "Opens the request details applet with the request.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 933,
              "column": 2
            },
            "end": {
              "line": 937,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_openRequestDetails",
          "description": "Fires `navigate` event for currently loaded in the details request.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 941,
              "column": 2
            },
            "end": {
              "line": 948,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_editRequestDetails",
          "description": "Opens request details editor in place of the request details applet.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 953,
              "column": 2
            },
            "end": {
              "line": 958,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resizeSheetContent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 960,
              "column": 2
            },
            "end": {
              "line": 966,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_cancelRequestEdit",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 968,
              "column": 2
            },
            "end": {
              "line": 971,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_saveRequestEdit",
          "description": "Closes editor when saving request",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 976,
              "column": 2
            },
            "end": {
              "line": 979,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateExportFile",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 981,
              "column": 2
            },
            "end": {
              "line": 983,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dispatch",
          "description": "Dispatches bubbling and composed custom event.\nBy default the event is cancelable until `cancelable` property is set to false.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 991,
              "column": 2
            },
            "end": {
              "line": 1000,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Event type"
            },
            {
              "name": "detail",
              "type": "?any",
              "description": "A detail to set"
            }
          ],
          "return": {
            "type": "CustomEvent"
          }
        },
        {
          "name": "_projectChanged",
          "description": "Handler for the `project-object-changed` event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1006,
              "column": 2
            },
            "end": {
              "line": 1016,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "False if the event was not handled."
          }
        },
        {
          "name": "_dragoverHandler",
          "description": "Handler for `dragover` event on this element. If the dagged item is compatible\nit renders drop message.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1022,
              "column": 2
            },
            "end": {
              "line": 1031,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "DragEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeDropEffect",
          "description": "Computes value fro `dropEffect` property of the `DragEvent`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1037,
              "column": 2
            },
            "end": {
              "line": 1050,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "DragEvent"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Either `copy` or `move`."
          }
        },
        {
          "name": "_dropHandler",
          "description": "Handler for `drag` event on this element. If the dagged item is compatible\nit adds request to saved requests.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1056,
              "column": 2
            },
            "end": {
              "line": 1080,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "DragEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleMoveDrop",
          "description": "Handles logic when drop event is `move` in effect.\nRemoves reference to old project (if exists). It uses `arc-source/project-detail`\ndata from event which should hold project ID.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1089,
              "column": 2
            },
            "end": {
              "line": 1105,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "DragEvent"
            },
            {
              "name": "request",
              "type": "Object",
              "description": "Request object"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if the request object changed."
          }
        },
        {
          "name": "_insertRequestAt",
          "description": "Updates project and request objects and inserts the request at a position.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1114,
              "column": 2
            },
            "end": {
              "line": 1154,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "index",
              "type": "Number",
              "description": "The position in requests order"
            },
            {
              "name": "request",
              "type": "Object",
              "description": "Request to update"
            },
            {
              "name": "forceRequestUpdate",
              "type": "Boolean",
              "description": "Forces update on request object even\nwhen position hasn't change."
            }
          ],
          "return": {
            "type": "Promise"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        },
        {
          "url": "demo/dnd.html",
          "description": "Drag and drop"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 94,
          "column": 0
        },
        "end": {
          "line": 1186,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "PolymerElement",
      "name": "UiElements.ProjectDetails",
      "attributes": [
        {
          "name": "project-id",
          "description": "Project datastore ID to display.",
          "sourceRange": {
            "start": {
              "line": 297,
              "column": 6
            },
            "end": {
              "line": 300,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "project",
          "description": "Retreived from the data store project data.",
          "sourceRange": {
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 304,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "edit",
          "description": "Set to true to enable project editor.",
          "sourceRange": {
            "start": {
              "line": 308,
              "column": 6
            },
            "end": {
              "line": 311,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "loading-project",
          "description": "True when the project data are being loaded",
          "sourceRange": {
            "start": {
              "line": 316,
              "column": 6
            },
            "end": {
              "line": 320,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "editor-opened",
          "description": "When set the project metadata editor is opened.",
          "sourceRange": {
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 326,
              "column": 27
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "details-opened",
          "description": "When set the project metadata preview is opened.",
          "sourceRange": {
            "start": {
              "line": 330,
              "column": 6
            },
            "end": {
              "line": 330,
              "column": 28
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "no-auto-projects",
          "description": "When set the element won't request projects list when attached to the dom.\nThis is passed to the request editor.",
          "sourceRange": {
            "start": {
              "line": 335,
              "column": 6
            },
            "end": {
              "line": 335,
              "column": 29
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "draggable-enabled",
          "description": "Enables the comonent to accept drop action with a request.",
          "sourceRange": {
            "start": {
              "line": 339,
              "column": 6
            },
            "end": {
              "line": 339,
              "column": 70
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "export-data",
          "description": "Fired when the project is to be exported.\nSee\nhttps://github.com/advanced-rest-client/api-components-api/blob/master/docs/export-event.md\nfor more information.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "navigate",
          "description": "Fired when navigation was requested",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "request-objects-deleted",
          "description": "Fired when requests are to be deleted. Informs the model to delete items.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "request-objects-undeleted",
          "description": "Fired when the \"revert\" delete button has been used.\nInforms the requests model to restore the data.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "loading-project-changed",
          "description": "Fired when the `loadingProject` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "project-details"
    }
  ]
}
